CONFIG = Debug
#CONFIG = Release

ifeq ($(CONFIG),Debug)
DEBUG := -g
endif
ifeq ($(CONFIG),Release)
OPT := -O2 -DNDEBUG
endif

# See if we're compiling on a Raspberry Pi.
ifeq ($(shell uname -m),armv6l)
IS_RASPBERRY_PI = true
PLATFORM_DEFINES = -DRASPBERRY_PI
endif

CXX = g++
CXXFLAGS = $(DEBUG) $(OPT) $(PLATFORM_DEFINES) -Wall -D_REENTRANT -std=c++0x

MAIN_SRCS := \
	abstract_event_visitor.cpp \
	car_pi_app.cpp \
	composite_event_handler.cpp \
	cons_car_pi_app.cpp \
	cons_input_reader_thread.cpp \
	cons_menu_view.cpp \
	cons_music_player_view.cpp \
	cons_video_player_view.cpp \
	console.cpp \
	event.cpp \
	event_handler.cpp \
	event_queue.cpp \
	file_navigator_menu_controller.cpp \
	main.cpp \
	main_menu_controller.cpp \
	main_menu.cpp \
	menu_controller.cpp \
	menu.cpp \
	menu_view.cpp \
	music_file_navigator_menu_controller.cpp \
	music_player_controller.cpp \
	play_sound.cpp \
	play_video.cpp \
	static_menu.cpp \
	thread.cpp \
	video_file_navigator_menu_controller.cpp \
	video_player_controller.cpp

ifeq ($(IS_RASPBERRY_PI),true)
DAEMON_SRCS = button_event_daemon.cpp gpio_pin.cpp
endif

MAIN_OBJS := $(MAIN_SRCS:%.cpp=$(CONFIG)/%.o)
DAEMON_OBJS :=  $(DAEMON_SRCS:%.cpp=$(CONFIG)/%.o)

TARGETS = $(CONFIG)/CarPi
ifeq ($(IS_RASPBERRY_PI),true)
TARGETS += $(CONFIG)/ButtonDaemon
endif

$(CONFIG)/%.o : %.cpp
	$(CXX) $(CXXFLAGS) -c $*.cpp -o $(CONFIG)/$*.o

all : $(TARGETS)

$(CONFIG)/CarPi : $(CONFIG) $(MAIN_OBJS)
	$(CXX) -o $@ $(MAIN_OBJS) -lncurses -lpthread

$(CONFIG)/ButtonDaemon : $(CONFIG) $(DAEMON_OBJS)
	$(CXX) -o $@ $(DAEMON_OBJS)

$(CONFIG) :
	mkdir -p $(CONFIG)

$(CONFIG)/depend.mak : $(CONFIG)
	touch $@

depend :
	$(CXX) $(CXXFLAGS) -M $(MAIN_SRCS) $(DAEMON_SRCS) | \
		perl -n -e 's,^([a-z]),$(CONFIG)/\1,; print' > $(CONFIG)/depend.mak

clean :
	rm -f $(CONFIG)/*.o

include $(CONFIG)/depend.mak
